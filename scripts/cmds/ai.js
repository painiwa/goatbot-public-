const axios = require("axios");

const Prefixes = ["ai", "anjara", "ae"];
const RP = "Ajoute des Emojis et r√©pond √† la question";

const fonts = {
  a: "ùóÆ", b: "ùóØ", c: "ùó∞", d: "ùó±", e: "ùó≤", f: "ùó≥", g: "ùó¥", h: "ùóµ", i: "ùó∂",
  j: "ùó∑", k: "ùó∏", l: "ùóπ", m: "ùó∫", n: "ùóª", o: "ùóº", p: "ùóΩ", q: "ùóæ", r: "ùóø",
  s: "ùòÄ", t: "ùòÅ", u: "ùòÇ", v: "ùòÉ", w: "ùòÑ", x: "ùòÖ", y: "ùòÜ", z: "ùòá",
  A: "ùóî", B: "ùóï", C: "ùóñ", D: "ùóó", E: "ùóò", F: "ùóô", G: "ùóö", H: "ùóõ", I: "ùóú",
  J: "ùóù", K: "ùóû", L: "ùóü", M: "ùó†", N: "ùó°", O: "ùó¢", P: "ùó£", Q: "ùó§", R: "ùó•",
  S: "ùó¶", T: "ùóß", U: "ùó®", V: "ùó©", W: "ùó™", X: "ùó´", Y: "ùó¨", Z: "ùó≠"
};

function applyFont(text) {
  return text.split('').map(char => fonts[char] || char).join('');
}

function splitMessage(text, max = 2000) {
  const chunks = [];
  for (let i = 0; i < text.length; i += max) {
    chunks.push(text.substring(i, i + max));
  }
  return chunks;
}

function extractImages(text) {
  const regex = /(https?:\/\/[^\s]+?\.(jpg|jpeg|png|webp|gif))/gi;
  return [...new Set(text.match(regex) || [])];
}

async function sendImages(images, message) {
  for (const url of images) {
    try {
      const stream = await global.utils.getStreamFromURL(url);
      await message.reply({ attachment: stream });
    } catch (e) {
      console.log(`‚ùå Erreur image : ${url}`);
    }
  }
}

// Ajoute des emojis et phrases fun aux r√©ponses IA
function stylizeResponse(text) {
  const emojis = ["ü§ñ", "‚ú®", "üî•", "üí°", "üòé", "üéâ"];
  const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

  const humor = [
    "Voil√† ce que je pense ü§î",
    "Attention, √ßa vient du futur üòé",
    "Directement de mon cerveau d‚ÄôIA üí°",
    "Esp√©rons que √ßa t‚Äôaide ! üéâ",
    "Analyse termin√©e, voici le r√©sultat ü§ñ"
  ];
  const randomHumor = humor[Math.floor(Math.random() * humor.length)];

  return `${randomEmoji} ${randomHumor}\n\n${text}`;
}

async function handlePrompt(prompt, message, event) {
  try {
    const url = `https://haji-mix-api.gleeze.com/api/groq?ask=${encodeURIComponent(prompt)}&model=llama-3.3-70b-versatile&uid=56666&RP=${encodeURIComponent(RP)}&stream=True`;
    const res = await axios.get(url, { timeout: 20000 });

    const raw = res.data?.answer || res.data?.result || res.data?.message || "ü§ñ Rien re√ßu.";
    const decorated = stylizeResponse(raw);
    const styled = applyFont(decorated);

    const images = extractImages(raw);
    const chunks = splitMessage(styled);
    const sent = [];

    for (const chunk of chunks) {
      const msg = await message.reply(chunk);
      sent.push(msg.messageID);
      global.GoatBot.onReply.set(msg.messageID, {
        commandName: "ai",
        author: event.senderID
      });
      setTimeout(() => global.GoatBot.onReply.delete(msg.messageID), 2 * 60 * 1000);
    }

    await sendImages(images, message);

    setTimeout(() => {
      for (const id of sent) message.api.unsendMessage(id);
    }, 60 * 1000);

  } catch (err) {
    console.error(err);
    return message.reply(applyFont("‚ùå R√©ponse IA √©chou√©e."));
  }
}

module.exports = {
  config: {
    name: "ai",
    aliases: ["ae"],
    version: "2.5",
    author: "Octavio",
    countDown: 2,
    role: 0,
    shortDescription: "ü§ñ AI + images multiples",
    longDescription: "Pose une question √† l‚ÄôIA et re√ßois du texte stylis√©, fun et toutes les images en direct.",
    category: "ai",
    guide: "{pn} <question>"
  },

  onStart: async function ({ message, args, event, api }) {
    const prompt = args.join(" ").trim();
    if (!prompt) return message.reply(`Salut, je suis Octavio Bot ! En quoi puis-je vous aider, cher humain ü§ñ`);
    await handlePrompt(prompt, message, event);
  },

  onChat: async function ({ event, message, api }) {
    if (!event.body) return;
    const prefix = Prefixes.find(p => event.body.toLowerCase().startsWith(p.toLowerCase()));
    if (!prefix) return;

    const args = event.body.slice(prefix.length).trim().split(/\s+/);
    const input = args.join(" ").toLowerCase();

    // Variantes pour l'accueil AI
    const aiGreetings = ["", "ai", "anjara", "ae", "bonjour", "salut", "coucou"];
    if (aiGreetings.includes(input)) {
      return message.reply(`Salut, je suis Octavio Bot ! En quoi puis-je vous aider, cher humain ü§ñ`);
    }

    // Variantes pour "qui t'a cr√©√©"
    const creatorQuestions = [
      "qui t'a cr√©√©", "qui t'as cr√©√©", "qui ta cr√©√©", "qui ta cr√©√©e",
      "qui t a cr√©√©", "qui t as cr√©√©", "qui t as cr√©e", "qui t a cr√©e",
      "qui est ton cr√©ateur", "qui est ton createur", "qui t'a fait", "qui t as fait"
    ];
    if (creatorQuestions.some(q => input.includes(q))) {
      return message.reply("Je suis cr√©√© par Octavio !");
    }

    // Sinon appel IA
    this.onStart({ message, args, event, api });
  },

  onReply: async function ({ event, message, Reply, api }) {
    if (event.senderID !== Reply.author) return;
    const prompt = event.body.trim();
    await handlePrompt(prompt, message, event);
  }
};
